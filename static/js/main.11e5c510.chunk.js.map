{"version":3,"sources":["hooks/useLocalStorage.js","components/Editor.jsx","components/App.js","index.js"],"names":["useLocalStorage","key","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","Editor","props","language","displayName","onChange","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","lineNumbers","theme","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAsBeA,EAlBS,SAACC,EAAKC,GAC5B,IAAMC,EAHO,iBAGgBF,EADgB,EAGnBG,oBAAS,WACjC,IAAMC,EAAYC,aAAaC,QAAQJ,GACvC,OAAiB,MAAbE,EAA0BG,KAAKC,MAAMJ,GACb,oBAAjBH,EACFA,IAEFA,KAToC,mBAGtCQ,EAHsC,KAG/BC,EAH+B,KAe7C,OAHAC,qBAAU,WACRN,aAAaO,QAAQV,EAAaK,KAAKM,UAAUJ,MAChD,CAACP,EAAaO,IACV,CAACA,EAAOC,I,sDC4BFI,EArCA,SAACC,GAAW,IACjBC,EAA2CD,EAA3CC,SAAUC,EAAiCF,EAAjCE,YAAaR,EAAoBM,EAApBN,MAAOS,EAAaH,EAAbG,SADd,EAOAf,oBAAS,GAPT,mBAOjBgB,EAPiB,KAOXC,EAPW,KASxB,OACE,yBAAKC,UAAS,2BAAsBF,EAAO,GAAK,cAC9C,yBAAKE,UAAU,gBACZJ,EACD,4BACEK,KAAK,SACLD,UAAU,sBACVE,QAAS,kBAAMH,GAAQ,SAACI,GAAD,OAAeA,OAEtC,kBAAC,IAAD,CAAiBC,KAAMN,EAAOO,IAAgBC,MAAgB,MAGlE,kBAAC,aAAD,CACEC,eAnBe,SAACC,EAAQC,EAAMrB,GAClCS,EAAST,IAmBLA,MAAOA,EACPY,UAAU,sBACVU,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMlB,EACNmB,aAAa,EACbC,MAAO,gBCiDFC,MArFf,WAAgB,IAAD,EACWtC,EACtB,OADqC,mHAD1B,mBACNuC,EADM,KACAC,EADA,OAUSxC,EACpB,MADmC,2UAVxB,mBAUNyC,EAVM,KAUDC,EAVC,OAmCO1C,EAAgB,KAAD,4BAnCtB,mBAmCN2C,EAnCM,KAmCFC,EAnCE,OAoCexC,mBAAS,IApCxB,mBAoCNyC,EApCM,KAoCEC,EApCF,KAiDb,OAXAlC,qBAAU,WACR,IAAMmC,EAAUC,YAAW,WACzBF,EAAU,uBAAD,OACDP,EADC,iCAEAE,EAFA,mCAGCE,EAHD,8BAKR,KACH,OAAO,kBAAMM,aAAaF,MACzB,CAACR,EAAME,EAAKE,IAGb,oCACE,yBAAKrB,UAAU,iBACb,kBAAC,EAAD,CACEL,SAAS,MACTC,YAAY,OACZR,MAAO6B,EACPpB,SAAUqB,IAEZ,kBAAC,EAAD,CACEvB,SAAS,MACTC,YAAY,MACZR,MAAO+B,EACPtB,SAAUuB,IAEZ,kBAAC,EAAD,CACEzB,SAAS,aACTC,YAAY,KACZR,MAAOiC,EACPxB,SAAUyB,KAGd,yBAAKtB,UAAU,QACb,4BACEuB,OAAQA,EACRK,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,YC7EjBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.11e5c510.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst PREFIX = \"codepen-clone-\";\r\n\r\nconst useLocalStorage = (key, initialValue) => {\r\n  const prefixedKey = PREFIX + key;\r\n\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey);\r\n    if (jsonValue != null) return JSON.parse(jsonValue);\r\n    if (typeof initialValue === \"function\") {\r\n      return initialValue();\r\n    }\r\n    return initialValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value));\r\n  }, [prefixedKey, value]);\r\n  return [value, setValue];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import React, { useState } from \"react\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/mode/xml/xml\";\r\nimport \"codemirror/mode/javascript/javascript\";\r\nimport \"codemirror/mode/css/css\";\r\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCompressAlt, faExpandAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Editor = (props) => {\r\n  const { language, displayName, value, onChange } = props;\r\n\r\n  const handleChange = (editor, data, value) => {\r\n    onChange(value);\r\n  };\r\n\r\n  const [open, setOpen] = useState(true);\r\n\r\n  return (\r\n    <div className={`editor-container ${open ? \"\" : \"collapsed\"}`}>\r\n      <div className=\"editor-title\">\r\n        {displayName}\r\n        <button\r\n          type=\"button\"\r\n          className=\"expand-collapse-btn\"\r\n          onClick={() => setOpen((prevOpen) => !prevOpen)}\r\n        >\r\n          <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />{\" \"}\r\n        </button>\r\n      </div>\r\n      <ControlledEditor\r\n        onBeforeChange={handleChange}\r\n        value={value}\r\n        className=\"code-mirror-wrapper\"\r\n        options={{\r\n          lineWrapping: true,\r\n          lint: true,\r\n          mode: language,\r\n          lineNumbers: true,\r\n          theme: \"material\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import React, { useState, useEffect } from \"react\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport Editor from \"./Editor\";\n\nfunction App() {\n  const [html, setHtml] = useLocalStorage(\n    \"html\",\n    `<!--This is a sample-->\n<div class=\"center\">\n  <h1>Hello, world!</h1>\n  <p>Have fun!</p>\n</div>\n    `\n  );\n  const [css, setCss] = useLocalStorage(\n    \"css\",\n    `/* Hi, there! */\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: Calibri;\n  font-size: 1.25rem;\n  color: gray;\n}\n\n.center {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background:  hsl(255, 6%, 15%);\n}\n  `\n  );\n  const [js, setJs] = useLocalStorage(\"js\", `// github.com/Chris-Ivan`);\n  const [srcDoc, setSrcDoc] = useState(\"\");\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`<html>\n      <body>${html}</body>\n      <style>${css}</style>\n      <script>${js}</script>\n    </html>`);\n    }, 250);\n    return () => clearTimeout(timeout);\n  }, [html, css, js]);\n\n  return (\n    <>\n      <div className=\"pane top-pane\">\n        <Editor\n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html}\n          onChange={setHtml}\n        />\n        <Editor\n          language=\"css\"\n          displayName=\"CSS\"\n          value={css}\n          onChange={setCss}\n        />\n        <Editor\n          language=\"javascript\"\n          displayName=\"JS\"\n          value={js}\n          onChange={setJs}\n        />\n      </div>\n      <div className=\"pane\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        ></iframe>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}